#define LED_PIN  13
#include "Switch.h"
#include <SoftwareSerial.h>
#include "VoiceRecognitionV3.h"
//VoiceRecognition
VR myVR(2, 3);   // 2:TX 3:RX, you can choose your favourite pins.
uint8_t records[7]; // save record
uint8_t buf[64];
#define onRecord    (0)
#define offRecord   (1)
void printSignature(uint8_t *buf, int len)
{
int i;
for (i = 0; i < len; i++) 
{
if (buf[i] > 0x19 && buf[i] < 0x7F) 
{
Serial.write(buf[i]);
}
else {
Serial.print("[");
Serial.print(buf[i], HEX);
Serial.print("]");
}
}
}
void printVR(uint8_t *buf)
{
Serial.println("VR Index\tGroup\tRecordNum\tSignature");
Serial.print(buf[2], DEC);
Serial.print("\t\t");
if (buf[0] == 0xFF) 
{
Serial.print("NONE");
}
else if (buf[0] & 0x80) 
{
Serial.print("UG ");
Serial.print(buf[0] & (~0x80), DEC);
}
else {
Serial.print("SG ");
Serial.print(buf[0], DEC);
}
Serial.print("\t");
Serial.print(buf[1], DEC);
Serial.print("\t\t");
if (buf[3] > 0) {
printSignature(buf + 4, buf[3]);
}
else 
{
Serial.print("NONE");
}
Serial.println("\r\n");
}
//TeamElectro
Switch led(LED_PIN);
int readPinA1 = A1; //Light physical switch Pin
int V1 = 0;
void setup() {
myVR.begin(9600);
//  Serial.begin(9600);
Serial.begin(9600);
led.init();
pinMode(readPinA1, INPUT);
//VoiceRecognition
if (myVR.clear() == 0) {
Serial.println("Recognizer cleared.");
} else {
Serial.println("Not find VoiceRecognitionModule.");
Serial.println("Please check connection and restart Arduino.");
while (1);
}
if (myVR.load((uint8_t)onRecord) >= 0) 
{
Serial.println("onRecord loaded");
}
if (myVR.load((uint8_t)offRecord) >= 0) 
{
Serial.println("offRecord loaded");
}
//VoiceRecognition
}
char val;
void loop() {
//  BluetoothModule
if (Serial.available()) 
{
val = Serial.read();
delay(10);
switch (val){
case '2':
led.btFun(0);
break;
case '1':
led.btFun(1);
break;
}
}
//PhysicalSwitch
V1 = analogRead(readPinA1);
//  delay(100);
Serial.println(V1);
if (V1 == 0) {
led.psFun(1);
}
else {
led.psFun(0);
}
//VoiceRecognition
int ret;
ret = myVR.recognize(buf, 50);
if (ret > 0) {
switch (buf[1]) {
case onRecord:
/** turn on LED */
led.vrFun(1);
break;
case offRecord:
/** turn off LED*/
led.vrFun(0);
break;
default:
Serial.println("Record function undefined");
break;
}
/** voice recognized */
printVR(buf);
}
delay(100);
}
